<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">
    <data>
        <variable
            name="viewmodel"
            type="com.udacity.shoestore.viewmodels.SharedViewModel" />
    </data>
    <!--
    Constrain Layout help to organize complix UI so i need it to add the floating button in special
    position as another stack on the scroll view so i can't use Linear Layout here
    -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/colorPrimary">

        <ScrollView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="@dimen/small_margin_dimention"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">
            <!--
            here i should use linear because it's single vertical direction of views and i want
            sort them easy and organized
            -->
            <LinearLayout
                android:id="@+id/shoe_tlist_linear_layou_id"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical">


            </LinearLayout>
        </ScrollView>

        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:id="@+id/floatingActionButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/small_margin_dimention"
            android:layout_marginBottom="@dimen/small_margin_dimention"
            android:clickable="true"
            android:contentDescription="@string/floating_action_button_description"
            android:focusable="true"
            android:visibility="visible"
            app:backgroundTint="@color/colorPrimaryDark"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="1.0"
            app:layout_constraintStart_toStartOf="parent"
            app:srcCompat="@drawable/ic_add" />
    </androidx.constraintlayout.widget.ConstraintLayout>


</layout>